; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "SystrayProxyManager"
#define MyAppVersion "4.2.0.0"
#define MyAppPublisher "Charles Daudr√©-Vignier"
#define MyAppURL "https://github.com/Daudre-Vignier-Charles/SystrayProxyManager"
#define MyAppExeName "SystrayProxyManager.exe"
#define MyAppMutex "{{5D1B5C13-C70C-43CA-8039-7A353F026452}"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{440517D4-5B36-4C14-B25C-703BAF50830B}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={userappdata}\{#MyAppName}
DisableProgramGroupPage=yes
; The [Icons] "quicklaunchicon" entry uses {userappdata} but its [Tasks] entry has a proper IsAdminInstallMode Check.
UsedUserAreasWarning=no
LicenseFile=LICENSE.txt
; Remove the following line to run in administrative install mode (install for all users.)
PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=dialog
OutputDir=bin\Release
OutputBaseFilename=SystrayProxyManagerInstaller
SetupIconFile=on.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
Uninstallable=yes
AppMutex={#MyAppMutex}

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked;
Name: "startmenuentry"; Description:"Launch SystrayProxyManager at startup"; GroupDescription: "{cm:AdditionalIcons}";

[Files]
Source: "bin\Release\SystrayProxyManager.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\Hardcodet.Wpf.TaskbarNotification.dll"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{userstartup}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: startmenuentry
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autoprograms}\Uninstall_{#MyAppName}"; Filename: "{app}\unins000"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

[UninstallDelete]
Type: dirifempty; Name: "{app}"

[Code]
procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
var
  ProxyListFile: string;
begin
  ProxyListFile := ExpandConstant('{app}') + '\proxy_list.dat';
  if CurUninstallStep = usUninstall then
  begin
    if FileExists(ProxyListFile) then
    begin
      if MsgBox('Do you want to delete proxy list ?',
        mbConfirmation, MB_YESNO) = IDYES
      then
        DeleteFile(ProxyListFile);
    end;
  end;
end;